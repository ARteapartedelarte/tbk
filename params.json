{"name":"TBK","tagline":"Python implementation of Transbank's Webpay protocol","body":"tbk - Transbank's Webpay protocol\r\n=================================\r\n\r\n**Attention: Beta not ready for production**\r\n\r\nPython implementation of Transbank's Webpay protocol.\r\n\r\n![Latest\r\nVersion](https://pypip.in/version/tbk/badge.svg?%0A%20:target:%20https://pypi.python.org/pypi/tbk/%0A%20:alt:%20Latest%20Version)\r\n[![Development Status](https://pypip.in/status/tbk/badge.svg?)](https://pypi.python.org/pypi/tbk/)\r\n[![Build Status](https://travis-ci.org/pedroburon/tbk.svg?)](https://travis-ci.org/pedroburon/tbk)\r\n[![Coverage Status](https://img.shields.io/coveralls/pedroburon/tbk.svg?)](https://coveralls.io/r/pedroburon/tbk)\r\n[![Downloads](https://pypip.in/download/tbk/badge.svg?period=month)](https://pypi.python.org/pypi/tbk/)\r\n\r\nInstallation\r\n------------\r\n\r\n    pip install tbk\r\n\r\nUsage\r\n-----\r\n\r\nSet environment variable for Commerce and initialize.\r\n\r\n    os.environ['TBK_COMMERCE_ID'] = \"597026007976\"\r\n    os.environ['TBK_COMMERCE_KEY'] = \"-----BEGIN RSA PRIVATE KEY-----\\nMIIEowIBAAKCAQEAn3HzPC1ZBzCO3edUCf/XJiwj3bzJpjjTi/zBO9O+DDzZCaMp...\"\"\r\n\r\n    from tbk.webpay.commerce import Commerce        \r\n\r\n    commerce = Commerce.create_commerce()\r\n    # for development purposes you can use\r\n    # commerce = Commerce(testing=True)\r\n\r\nIf you want to set the official webpay log (for certification issues):\r\n\r\n    from tbk.webpay.logging import configure_logger\r\n    from tbk.webpay.logging.official import WebpayOfficialHandler\r\n\r\n    configure_logger(WebpayOfficialHandler(LOG_BASE_PATH))\r\n\r\nCreate a new payment and redirect user.\r\n\r\n    from tbk.webpay.payment import Payment\r\n\r\n    payment = Payment(\r\n        request_ip='123.123.123.123',\r\n        commerce=commerce,\r\n        success_url='http://localhost:8080/webpay/success/',\r\n        confirmation_url='http://127.0.0.1:8080/webpay/confirmation/',\r\n        failure_url='http://localhost:8080/webpay/failure/',\r\n        session_id='SOME_SESSION_VALUE',\r\n        amount=123456,\r\n        order_id=1,\r\n    )\r\n    payment.redirect_url\r\n\r\nThen to confirm payment, use an endpoint with:\r\n\r\n    from tbk.webpay.confirmation import Confirmation\r\n\r\n    def confirmation(request):\r\n        conf = Confirmation(\r\n            commerce=commerce,\r\n            request_ip=request.ip_address,\r\n            data=request.POST\r\n        )\r\n\r\n        # validate_confirmation validate if order_id and amount are valid.        \r\n        if conf.is_success() and validate_confirmation(conf):\r\n            return HttpResponse(commerce.acknowledge)\r\n\r\n        return HttpResponse(commerce.reject)\r\n\r\nAbout webpay communication protocol:\r\n<http://sagmor.com/rants/technical/webpay-communication-protocol/>\r\n\r\nDevelopment\r\n-----------\r\n\r\nAfter cloning the repo:\r\n\r\n    python setup.py develop\r\n\r\nFor testing purposes:\r\n\r\n    python setup.py test\r\n\r\nRecommended:\r\n\r\n    pip install nosy\r\n    nosy\r\n\r\nCredits\r\n-------\r\n\r\nThis is a port from ruby implementation <http://github.com/sagmor/tbk>.\r\n","google":"UA-20399876-2","note":"Don't delete this file! It's used internally to help with page regeneration."}